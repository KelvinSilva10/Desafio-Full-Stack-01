{
  "openapi": "3.0.0",
  "info": {
    "title": "My API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http:///localhost:3000"
    }
  ],
  "paths": {
    "/sessions": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "description": "Authenticate a user with their email and password.",
        "requestBody": {
          "description": "User credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid email or password."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/client": {
      "get": {
        "description": "Get a list of clients",
        "summary": "Get a list of clients",
        "tags": ["Client"],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new client",
        "summary": "Create a new client",
        "tags": ["Client"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "summary": "Get a client by ID",
        "description": "Retrieves a client's information by their ID",
        "tags": ["Client"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the client",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "d5502e54-98fb-4a4a-84e4-fb7170b52407"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "404": {
            "description": "Client not found"
          }
        }
      },
      "patch": {
        "description": "Update an existing client",
        "summary": "Update an existing client",
        "tags": ["Client"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the client to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "404": {
            "description": "Client not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "description": "Delete an existing client",
        "summary": "Delete an existing client",
        "tags": ["Client"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the client to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "404": {
            "description": "Client not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contacts": {
      "post": {
        "summary": "Create a new contact",
        "description": "Create a new contact",
        "tags": ["Contacts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Contact's name.",
                    "example": "John Doe"
                  },
                  "firstEmail": {
                    "type": "string",
                    "maxLength": 50,
                    "format": "email",
                    "description": "Primary email address of the contact.",
                    "example": "john@example.com"
                  },
                  "secondaryEmail": {
                    "type": "string",
                    "maxLength": 50,
                    "format": "email",
                    "description": "Secondary email address of the contact.",
                    "example": "john.doe@example.com"
                  },
                  "mainPhone": {
                    "type": "string",
                    "maxLength": 20,
                    "description": "Primary phone number of the contact.",
                    "example": "+1 555-555-5555"
                  },
                  "secondaryPhone": {
                    "type": "string",
                    "maxLength": 20,
                    "description": "Secondary phone number of the contact.",
                    "example": "+1 555-555-5555"
                  }
                },
                "required": ["name", "firstEmail", "mainPhone"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Check the provided data."
          },
          "401": {
            "description": "Unauthorized. Invalid or expired authentication token."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Returns a list of contacts.",
        "description": "Returns a list of contacts.",
        "tags": ["Contacts"],
        "responses": {
          "200": {
            "description": "Lista de contatos.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "ID do contato."
                      },
                      "name": {
                        "type": "string",
                        "description": "Nome do contato."
                      },
                      "firstEmail": {
                        "type": "string",
                        "description": "Endereço de email principal do contato."
                      },
                      "secondaryEmail": {
                        "type": "string",
                        "description": "Endereço de email secundário do contato."
                      },
                      "mainPhone": {
                        "type": "string",
                        "description": "Número de telefone principal do contato."
                      },
                      "secondaryPhone": {
                        "type": "string",
                        "description": "Número de telefone secundário do contato."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Data de criação do contato.",
                        "example": "2022-03-28T14:30:00.000Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Data da última atualização do contato.",
                        "example": "2022-03-28T14:30:00.000Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado. Token de autenticação inválido ou expirado."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contact by ID",
        "description": "Retrieve contact information for a specific ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact information retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Contact with the specified ID not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": ["Contacts"],
        "summary": "Update a contact",
        "description": "Update the contact information for a specific ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contact object that needs to be updated.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact information updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - user not logged in."
          },
          "403": {
            "description": "Forbidden - user does not have permission to update this contact."
          },
          "404": {
            "description": "Contact with the specified ID not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete a contact",
        "description": "Delete a contact with a specific ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact deleted successfully."
          },
          "401": {
            "description": "Unauthorized - user not logged in."
          },
          "403": {
            "description": "Forbidden - user does not have permission to delete this contact."
          },
          "404": {
            "description": "Contact with the specified ID not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the client",
            "example": "d5502e54-98fb-4a4a-84e4-fb7170b52407"
          },
          "name": {
            "type": "string",
            "description": "The name of the client",
            "example": "John Doe"
          },
          "firstEmail": {
            "type": "string",
            "description": "The primary email address of the client",
            "example": "johndoe@example.com"
          },
          "secondaryEmail": {
            "type": "string",
            "description": "The secondary email address of the client",
            "example": "johndoe2@example.com"
          },
          "mainPhone": {
            "type": "string",
            "description": "The primary phone number of the client",
            "example": "(11) 91234-5678"
          },
          "secondaryPhone": {
            "type": "string",
            "description": "The secondary phone number of the client",
            "example": "(11) 99876-5432"
          }
        },
        "required": ["name", "firstEmail", "mainPhone"]
      },
      "ClientRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the client",
            "example": "John Doe"
          },
          "firstEmail": {
            "type": "string",
            "description": "The primary email address of the client",
            "example": "johndoe@example.com"
          },
          "secondaryEmail": {
            "type": "string",
            "description": "The secondary email address of the client",
            "example": "johndoe2@example.com"
          },
          "mainPhone": {
            "type": "string",
            "description": "The primary phone number of the client",
            "example": "(11) 91234-5678"
          },
          "secondaryPhone": {
            "type": "string",
            "description": "The secondary phone number of the client",
            "example": "(11) 99876-5432"
          },
          "password": {
            "type": "string",
            "description": "The password of the client",
            "example": "123456"
          }
        }
      },
      "ClientResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "firstEmail": {
            "type": "string",
            "maxLength": 50,
            "format": "email"
          },
          "secondaryEmail": {
            "type": "string",
            "maxLength": 50,
            "format": "email",
            "nullable": true
          },
          "mainPhone": {
            "type": "string",
            "maxLength": 20,
            "pattern": "^\\([0-9]{2}\\)\\s(9[0-9]{4}-[0-9]{4}|[0-9]{4}-[0-9]{4})$"
          },
          "secondaryPhone": {
            "type": "string",
            "maxLength": 20,
            "pattern": "^\\([0-9]{2}\\)\\s(9[0-9]{4}-[0-9]{4}|[0-9]{4}-[0-9]{4})$",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "description": "Name of the contact.",
            "example": "John Doe"
          },
          "firstEmail": {
            "type": "string",
            "format": "email",
            "maxLength": 50,
            "description": "Primary email address of the contact.",
            "example": "johndoe@example.com"
          },
          "secondaryEmail": {
            "type": "string",
            "format": "email",
            "maxLength": 50,
            "description": "Secondary email address of the contact, if any.",
            "example": "johndoe2@example.com"
          },
          "mainPhone": {
            "type": "string",
            "maxLength": 20,
            "description": "Main phone number of the contact.",
            "example": "+1 (555) 123-4567"
          },
          "secondaryPhone": {
            "type": "string",
            "maxLength": 20,
            "description": "Secondary phone number of the contact, if any.",
            "example": "+1 (555) 987-6543"
          }
        },
        "required": ["name", "firstEmail", "mainPhone"]
      },
      "ContactResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the newly created contact."
          },
          "name": {
            "type": "string",
            "description": "Name of the contact."
          },
          "firstEmail": {
            "type": "string",
            "format": "email",
            "description": "Primary email address of the contact."
          },
          "secondaryEmail": {
            "type": "string",
            "nullable": true,
            "format": "email",
            "description": "Secondary email address of the contact."
          },
          "mainPhone": {
            "type": "string",
            "description": "Main phone number of the contact."
          },
          "secondaryPhone": {
            "type": "string",
            "nullable": true,
            "description": "Secondary phone number of the contact."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the contact was created."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the contact was last updated."
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates whether the contact is active or not."
          }
        },
        "example": {
          "id": "6131c3f8f15d622c0f1d9e0c",
          "name": "João da Silva",
          "firstEmail": "joao@example.com",
          "secondaryEmail": "joao.silva@example.com",
          "mainPhone": "+55 11 9999-9999",
          "secondaryPhone": "+55 11 8888-8888",
          "createdAt": "2021-09-02T18:30:36.032Z",
          "updatedAt": "2021-09-02T18:30:36.032Z",
          "isActive": true
        }
      },
      "LoginCredentials": {
        "type": "object",
        "properties": {
          "firstEmail": {
            "type": "string",
            "format": "email",
            "description": "User's email address.",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password.",
            "example": "mypassword"
          }
        },
        "required": ["firstEmail", "password"]
      },
      "SessionResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "JWT access token to use for authenticated requests.",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "user": {
            "type": "string",
            "description": "User own token"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
